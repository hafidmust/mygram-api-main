{
    "swagger": "2.0",
    "info": {
        "description": "MyGram is a free photo sharing app written in Go. People can share, view, and comment photos by everyone. Anyone can create an account by registering an email address and creating a username.",
        "title": "MyGram API",
        "contact": {
            "name": "musshal",
            "email": "musthafafaishal@gmail.com"
        },
        "license": {
            "name": "MIT License",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/",
    "paths": {
        "/comments": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get all comments with authentication user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "comments"
                ],
                "summary": "Fetch all comments",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseDataFetchedComment"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/mygram-api_comment_utils.ResponseMessage"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/mygram-api_comment_utils.ResponseMessage"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "create and store a comment with authentication user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "comments"
                ],
                "summary": "Add a comment",
                "parameters": [
                    {
                        "description": "Add Comment",
                        "name": "json",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/utils.AddComment"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseDataAddedComment"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/mygram-api_comment_utils.ResponseMessage"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/mygram-api_comment_utils.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/comments/{id}": {
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Update a comment by id with authentication user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "comments"
                ],
                "summary": "Update a comment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Comment ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update Comment",
                        "name": "json",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/utils.UpdateComment"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseDataUpdatedComment"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/mygram-api_comment_utils.ResponseMessage"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/mygram-api_comment_utils.ResponseMessage"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/mygram-api_comment_utils.ResponseMessage"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Delete a comment by id with authentication user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "comments"
                ],
                "summary": "Delete a comment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Comment ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseMessageDeletedComment"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/mygram-api_comment_utils.ResponseMessage"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/mygram-api_comment_utils.ResponseMessage"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/mygram-api_comment_utils.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/photos": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get all photos with authentication user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "photos"
                ],
                "summary": "Fetch all photos",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseDataFetchedPhoto"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/mygram-api_photo_utils.ResponseMessage"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/mygram-api_photo_utils.ResponseMessage"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Create and store a photo with authentication user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "photos"
                ],
                "summary": "Store a photo",
                "parameters": [
                    {
                        "description": "Add Photo",
                        "name": "json",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/utils.AddPhoto"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseDataAddedPhoto"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/mygram-api_photo_utils.ResponseMessage"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/mygram-api_photo_utils.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/photos/{id}": {
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Update a photo by id with authentication user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "photos"
                ],
                "summary": "Update a photo",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Photo ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Photo",
                        "name": "json",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/utils.UpdatePhoto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseDataUpdatedPhoto"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/mygram-api_photo_utils.ResponseMessage"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/mygram-api_photo_utils.ResponseMessage"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/mygram-api_photo_utils.ResponseMessage"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Delete a photo by id with authentication user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "photos"
                ],
                "summary": "Delete a photo",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Photo ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseMessageDeletedPhoto"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/mygram-api_photo_utils.ResponseMessage"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/mygram-api_photo_utils.ResponseMessage"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/mygram-api_photo_utils.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/socialmedias": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get all social media with authentication user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "socialmedias"
                ],
                "summary": "Fetch all social media",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseDataFetchedSocialMedia"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/mygram-api_socialmedia_utils.ResponseMessage"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/mygram-api_socialmedia_utils.ResponseMessage"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Create and store a social media with authentication user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "socialmedias"
                ],
                "summary": "Add a social media",
                "parameters": [
                    {
                        "description": "Add Social Media",
                        "name": "json",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/utils.AddSocialMedia"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseDataAddedSocialMedia"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/mygram-api_socialmedia_utils.ResponseMessage"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/mygram-api_socialmedia_utils.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/socialmedias/{id}": {
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Update a social media by id with authentication user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "socialmedias"
                ],
                "summary": "Update a social media",
                "parameters": [
                    {
                        "type": "string",
                        "description": "SocialMedia ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update Social Media",
                        "name": "json",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/utils.UpdateSocialMedia"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseDataUpdatedSocialMedia"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/mygram-api_socialmedia_utils.ResponseMessage"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/mygram-api_socialmedia_utils.ResponseMessage"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/mygram-api_socialmedia_utils.ResponseMessage"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Delete a social media by id with authentication user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "socialmedias"
                ],
                "summary": "Delete a social media",
                "parameters": [
                    {
                        "type": "string",
                        "description": "SocialMedia ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseMessageDeletedSocialMedia"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/mygram-api_socialmedia_utils.ResponseMessage"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/mygram-api_socialmedia_utils.ResponseMessage"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/mygram-api_socialmedia_utils.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/users": {
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Update a user with authentication user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Update a user",
                "parameters": [
                    {
                        "description": "Update User",
                        "name": "json",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/utils.UpdateUser"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseDataUpdatedUser"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/mygram-api_user_utils.ResponseMessage"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/mygram-api_user_utils.ResponseMessage"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/mygram-api_user_utils.ResponseMessage"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Delete a user with authentication user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Delete a user",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseMessageDeletedUser"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/mygram-api_user_utils.ResponseMessage"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/mygram-api_user_utils.ResponseMessage"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/mygram-api_user_utils.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/users/login": {
            "post": {
                "description": "Authentication a user and retrieve a token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Login a user",
                "parameters": [
                    {
                        "description": "Login User",
                        "name": "json",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/utils.LoginUser"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseDataLoggedinUser"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/mygram-api_user_utils.ResponseMessage"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/mygram-api_user_utils.ResponseMessage"
                        }
                    }
                }
            }
        },
        "/users/register": {
            "post": {
                "description": "create and store a user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Register a user",
                "parameters": [
                    {
                        "description": "Register User",
                        "name": "json",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/utils.RegisterUser"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseDataRegisteredUser"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/mygram-api_user_utils.ResponseMessage"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/mygram-api_user_utils.ResponseMessage"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "mygram-api_comment_utils.ResponseMessage": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "string",
                    "example": "the error explained here"
                },
                "status": {
                    "type": "string",
                    "example": "fail"
                }
            }
        },
        "mygram-api_photo_utils.ResponseMessage": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "string",
                    "example": "the error explained here"
                },
                "status": {
                    "type": "string",
                    "example": "fail"
                }
            }
        },
        "mygram-api_socialmedia_utils.ResponseMessage": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "string",
                    "example": "the error explained here"
                },
                "status": {
                    "type": "string",
                    "example": "fail"
                }
            }
        },
        "mygram-api_user_utils.ResponseMessage": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "string",
                    "example": "the error explained here"
                },
                "status": {
                    "type": "string",
                    "example": "fail"
                }
            }
        },
        "utils.AddComment": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "A comment"
                },
                "photo_id": {
                    "type": "string",
                    "example": "photo-123"
                }
            }
        },
        "utils.AddPhoto": {
            "type": "object",
            "properties": {
                "caption": {
                    "type": "string",
                    "example": "A caption"
                },
                "photo_url": {
                    "type": "string",
                    "example": "https://www.example.com/image.jpg"
                },
                "title": {
                    "type": "string",
                    "example": "A Title"
                }
            }
        },
        "utils.AddSocialMedia": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "example": "Example"
                },
                "social_media_url": {
                    "type": "string",
                    "example": "https://www.example.com/johndoe"
                }
            }
        },
        "utils.AddedComment": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string",
                    "example": "the created at generated here"
                },
                "id": {
                    "type": "string",
                    "example": "here is the generated comment id"
                },
                "message": {
                    "type": "string",
                    "example": "A comment"
                },
                "photo_id": {
                    "type": "string",
                    "example": "here is the generated photo id"
                },
                "user_id": {
                    "type": "string",
                    "example": "here is the generated user id"
                }
            }
        },
        "utils.AddedPhoto": {
            "type": "object",
            "properties": {
                "caption": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "photo_url": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "utils.AddedSocialMedia": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string",
                    "example": "the created at generated here"
                },
                "id": {
                    "type": "string",
                    "example": "the social media id generated here"
                },
                "name": {
                    "type": "string",
                    "example": "Example"
                },
                "social_media_url": {
                    "type": "string",
                    "example": "https://www.example.com/johndoe"
                },
                "user_id": {
                    "type": "string",
                    "example": "here is the generated user id"
                }
            }
        },
        "utils.FetchedComment": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "photo": {
                    "$ref": "#/definitions/utils.Photo"
                },
                "photo_id": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/utils.User"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "utils.FetchedPhoto": {
            "type": "object",
            "properties": {
                "caption": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "photo_url": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/utils.User"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "utils.LoggedinUser": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string",
                    "example": "the token generated here"
                }
            }
        },
        "utils.LoginUser": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "johndoe@example.com"
                },
                "password": {
                    "type": "string",
                    "example": "secret"
                }
            }
        },
        "utils.Photo": {
            "type": "object",
            "properties": {
                "caption": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "photo_url": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "utils.RegisterUser": {
            "type": "object",
            "properties": {
                "age": {
                    "type": "integer",
                    "example": 8
                },
                "email": {
                    "type": "string",
                    "example": "johndoe@example.com"
                },
                "password": {
                    "type": "string",
                    "example": "secret"
                },
                "username": {
                    "type": "string",
                    "example": "johndoe"
                }
            }
        },
        "utils.RegisteredUser": {
            "type": "object",
            "properties": {
                "age": {
                    "type": "integer",
                    "example": 8
                },
                "email": {
                    "type": "string",
                    "example": "johndoe@example.com"
                },
                "id": {
                    "type": "string",
                    "example": "the user id generated here"
                },
                "username": {
                    "type": "string",
                    "example": "johndoe"
                }
            }
        },
        "utils.ResponseDataAddedComment": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/utils.AddedComment"
                },
                "status": {
                    "type": "string",
                    "example": "success"
                }
            }
        },
        "utils.ResponseDataAddedPhoto": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/utils.AddedPhoto"
                },
                "status": {
                    "type": "string",
                    "example": "success"
                }
            }
        },
        "utils.ResponseDataAddedSocialMedia": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/utils.AddedSocialMedia"
                },
                "status": {
                    "type": "string",
                    "example": "success"
                }
            }
        },
        "utils.ResponseDataFetchedComment": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/utils.FetchedComment"
                    }
                },
                "status": {
                    "type": "string",
                    "example": "success"
                }
            }
        },
        "utils.ResponseDataFetchedPhoto": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/utils.FetchedPhoto"
                    }
                },
                "status": {
                    "type": "string",
                    "example": "success"
                }
            }
        },
        "utils.ResponseDataFetchedSocialMedia": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/utils.SocialMedias"
                },
                "status": {
                    "type": "string",
                    "example": "success"
                }
            }
        },
        "utils.ResponseDataLoggedinUser": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/utils.LoggedinUser"
                },
                "status": {
                    "type": "string",
                    "example": "success"
                }
            }
        },
        "utils.ResponseDataRegisteredUser": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/utils.RegisteredUser"
                },
                "status": {
                    "type": "string",
                    "example": "success"
                }
            }
        },
        "utils.ResponseDataUpdatedComment": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/utils.UpdatedComment"
                },
                "status": {
                    "type": "string",
                    "example": "success"
                }
            }
        },
        "utils.ResponseDataUpdatedPhoto": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/utils.UpdatedPhoto"
                },
                "status": {
                    "type": "string",
                    "example": "success"
                }
            }
        },
        "utils.ResponseDataUpdatedSocialMedia": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/utils.UpdatedSocialMedia"
                },
                "status": {
                    "type": "string",
                    "example": "success"
                }
            }
        },
        "utils.ResponseDataUpdatedUser": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/utils.UpdatedUser"
                },
                "status": {
                    "type": "string",
                    "example": "success"
                }
            }
        },
        "utils.ResponseMessageDeletedComment": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "your comment has been successfully deleted"
                },
                "status": {
                    "type": "string",
                    "example": "success"
                }
            }
        },
        "utils.ResponseMessageDeletedPhoto": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "your photo has been successfully deleted"
                },
                "status": {
                    "type": "string",
                    "example": "success"
                }
            }
        },
        "utils.ResponseMessageDeletedSocialMedia": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "your social media has been successfully deleted"
                },
                "status": {
                    "type": "string",
                    "example": "success"
                }
            }
        },
        "utils.ResponseMessageDeletedUser": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "your account has been successfully deleted"
                },
                "status": {
                    "type": "string",
                    "example": "success"
                }
            }
        },
        "utils.SocialMedia": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string",
                    "example": "here is the generated created at"
                },
                "id": {
                    "type": "string",
                    "example": "here is the generated social media id"
                },
                "name": {
                    "type": "string",
                    "example": "Example"
                },
                "social_media_url": {
                    "type": "string",
                    "example": "https://www.example.com/johndoe"
                },
                "updated_at": {
                    "type": "string",
                    "example": "here is the generated updated at"
                },
                "user": {
                    "$ref": "#/definitions/utils.User"
                },
                "user_id": {
                    "type": "string",
                    "example": "here is the generated user id"
                }
            }
        },
        "utils.SocialMedias": {
            "type": "object",
            "properties": {
                "social_medias": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/utils.SocialMedia"
                    }
                }
            }
        },
        "utils.UpdateComment": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "A new comment"
                }
            }
        },
        "utils.UpdatePhoto": {
            "type": "object",
            "properties": {
                "caption": {
                    "type": "string",
                    "example": "A new caption"
                },
                "photo_url": {
                    "type": "string",
                    "example": "https://www.example.com/new-image.jpg"
                },
                "title": {
                    "type": "string",
                    "example": "A new title"
                }
            }
        },
        "utils.UpdateSocialMedia": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "example": "New Example"
                },
                "social_media_url": {
                    "type": "string",
                    "example": "https://www.newexample.com/johndoe"
                }
            }
        },
        "utils.UpdateUser": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "newjohndoe@example.com"
                },
                "username": {
                    "type": "string",
                    "example": "newjohndoe"
                }
            }
        },
        "utils.UpdatedComment": {
            "type": "object",
            "properties": {
                "caption": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "photo_url": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "utils.UpdatedPhoto": {
            "type": "object",
            "properties": {
                "caption": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "photo_url": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "utils.UpdatedSocialMedia": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "example": "here is the generated social media id"
                },
                "name": {
                    "type": "string",
                    "example": "New Example"
                },
                "social_media_url": {
                    "type": "string",
                    "example": "https://www.newexample.com/johndoe"
                },
                "updated_at": {
                    "type": "string",
                    "example": "the updated at generated here"
                },
                "user_id": {
                    "type": "string",
                    "example": "here is the generated user id"
                }
            }
        },
        "utils.UpdatedUser": {
            "type": "object",
            "properties": {
                "age": {
                    "type": "integer",
                    "example": 8
                },
                "email": {
                    "type": "string",
                    "example": "newjohndoe@example.com"
                },
                "id": {
                    "type": "string",
                    "example": "here is the generated user id"
                },
                "updated_at": {
                    "type": "string",
                    "example": "the updated at generated here"
                },
                "username": {
                    "type": "string",
                    "example": "newjohndoe"
                }
            }
        },
        "utils.User": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "johndoe@example.com"
                },
                "id": {
                    "type": "string",
                    "example": "here is the generated user id"
                },
                "username": {
                    "type": "string",
                    "example": "johndoe"
                }
            }
        }
    },
    "securityDefinitions": {
        "Bearer": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}